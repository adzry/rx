name: Self Publish
on:
  push:
name: Self Publish

on:
  push:
    branches: [main]
  workflow_dispatch:   # <---- Tambah line ni    branches: [main]

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with: { version: 9 }
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm i && pnpm -w build

  migrate:
    needs: bootstrap
    runs-on: ubuntu-latest
    steps:
      - uses: supabase/setup-cli@v1
      - name: Push schema
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          set -e
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
          supabase db push || {
            echo "❌ Migration failed. Rolling back..."
            pnpm dlx prisma migrate resolve --rolled-back "$(date +%s)" --applied
            supabase db reset
            exit 1
          }

  deploy-api:
    needs: migrate
    runs-on: ubuntu-latest
    steps:
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy API (with self-heal)
        env: { FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }} }
        run: |
          set -e
          flyctl deploy --remote-only --config apps/api/fly.toml || {
            echo "❌ API deploy failed. Rolling back..."
            flyctl releases rollback
            flyctl deploy --remote-only --config apps/api/fly.toml
          }

  deploy-web:
    needs: bootstrap
    runs-on: ubuntu-latest
    steps:
      - uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: apps/web
      - name: Self-heal Web Deploy
        if: failure()
        run: |
          echo "❌ Web deploy failed. Retrying..."
          npx vercel --token=${{ secrets.VERCEL_TOKEN }} --prod --confirm
